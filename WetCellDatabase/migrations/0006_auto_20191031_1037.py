# Generated by Django 2.2.6 on 2019-10-31 13:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('WetCellDatabase', '0005_remove_lotinfo_known_lot'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='component',
            name='can_be_active_material',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_additive',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_anode',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_binder',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_cathode',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_conductive_additive',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_electrolyte',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_salt',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_separator',
        ),
        migrations.RemoveField(
            model_name='component',
            name='can_be_solvent',
        ),
        migrations.RemoveField(
            model_name='ratiocomponent',
            name='component_type',
        ),
        migrations.AddField(
            model_name='component',
            name='component_type',
            field=models.CharField(blank=True, choices=[('sa', 'salt'), ('ad', 'additive'), ('so', 'solvent'), ('am', 'active_material'), ('co', 'conductive_additive'), ('bi', 'binder')], max_length=2),
        ),
        migrations.AddField(
            model_name='component',
            name='composite_type',
            field=models.CharField(blank=True, choices=[('el', 'electrolyte'), ('ca', 'cathode'), ('an', 'anode'), ('se', 'separator')], max_length=2),
        ),
        migrations.AlterField(
            model_name='coating',
            name='description',
            field=models.CharField(blank=True, max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='coating',
            name='name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='coating',
            name='proprietary',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='coatinglot',
            name='coating',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.Coating'),
        ),
        migrations.AlterField(
            model_name='coatinglot',
            name='lot_info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.LotInfo'),
        ),
        migrations.AlterField(
            model_name='component',
            name='proprietary',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='componentlot',
            name='component',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.Component'),
        ),
        migrations.AlterField(
            model_name='componentlot',
            name='lot_info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.LotInfo'),
        ),
        migrations.AlterField(
            model_name='composite',
            name='composite_type',
            field=models.CharField(blank=True, choices=[('el', 'electrolyte'), ('ca', 'cathode'), ('an', 'anode'), ('se', 'separator')], max_length=2),
        ),
        migrations.AlterField(
            model_name='composite',
            name='electrode_geometry',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.ElectrodeGeometry'),
        ),
        migrations.AlterField(
            model_name='composite',
            name='proprietary',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='composite',
            name='proprietary_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='composite',
            name='separator_geometry',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.SeparatorGeometry'),
        ),
        migrations.AlterField(
            model_name='compositelot',
            name='composite',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.Composite'),
        ),
        migrations.AlterField(
            model_name='compositelot',
            name='lot_info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.LotInfo'),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='anode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anode', to='WetCellDatabase.CompositeLot'),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='can_vendor',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='cathode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cathode', to='WetCellDatabase.CompositeLot'),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='cell_model',
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='gasket_vendor',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='geometry',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.DryCellGeometry'),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='negative_foil_vendor',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='outer_tape_vendor',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='separator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='separator', to='WetCellDatabase.CompositeLot'),
        ),
        migrations.AlterField(
            model_name='drycell',
            name='top_cap_vendor',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='cell_length',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='cell_thickness',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='cell_width',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='geometry_category',
            field=models.CharField(blank=True, choices=[('po', 'pouch'), ('cy', 'cylinder'), ('st', 'stack'), ('co', 'coin')], max_length=2),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='metal_bag_sheet_thickness',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='seal_width_side',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='drycellgeometry',
            name='seal_width_top',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='drycelllot',
            name='dry_cell',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.DryCell'),
        ),
        migrations.AlterField(
            model_name='drycelllot',
            name='lot_info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.LotInfo'),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='density',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='foil_thickness',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='length_double_side',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='length_single_side',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='loading',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='porosity',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='tab_position_from_core',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='thickness',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodegeometry',
            name='width',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='electrodematerialstochiometry',
            name='atom',
            field=models.CharField(blank=True, choices=[('Li', 'LITHIUM'), ('O', 'OXIGEN'), ('C', 'CARBON'), ('Ni', 'NICKEL'), ('Mn', 'MANGANESE'), ('Co', 'COBALT'), ('Mg', 'MAGNESIUM'), ('Al', 'ALUMINUM'), ('Fe', 'IRON'), ('P', 'PHOSPHORUS'), ('Ti', 'TITANIUM'), ('S', 'SULFUR'), ('Na', 'SODIUM'), ('F', 'FLUORINE'), ('Cl', 'CHLORINE'), ('Cu', 'COPPER'), ('Zn', 'ZINC'), ('Mo', 'MOLYBDENUM'), ('Nb', 'NIOBIUM'), ('Si', 'SILICON'), ('Pt', 'PLATINUM')], max_length=3),
        ),
        migrations.AlterField(
            model_name='electrodematerialstochiometry',
            name='electrode_material',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.Component'),
        ),
        migrations.AlterField(
            model_name='electrodematerialstochiometry',
            name='stochiometry',
            field=models.FloatField(blank=True),
        ),
        migrations.AlterField(
            model_name='lotinfo',
            name='creation_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='lotinfo',
            name='creator',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='lotinfo',
            name='lot_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='ratiocomponent',
            name='component_lot',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.ComponentLot'),
        ),
        migrations.AlterField(
            model_name='ratiocomponent',
            name='composite',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='WetCellDatabase.Composite'),
        ),
        migrations.AlterField(
            model_name='ratiocomponent',
            name='ratio',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='separatorgeometry',
            name='base_thickness',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='separatorgeometry',
            name='overhang_in_core',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='separatorgeometry',
            name='width',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='wetcell',
            name='cell_id',
            field=models.IntegerField(blank=True, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='wetcell',
            name='dry_cell',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.DryCellLot'),
        ),
        migrations.AlterField(
            model_name='wetcell',
            name='electrolyte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='WetCellDatabase.CompositeLot'),
        ),
    ]
